name: Continuous Integration testing
on: ["push", "pull_request"]
env:
  # This version of Meson should be available as an EasyBuild on Fram and Betzy
  MESON_VERSION: '0.55.1'
jobs:
  build:
    name: Build BLOM on Github provided OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: github_action

      - name: Setup Python for newer version of Meson - Ubuntu
        uses: actions/setup-python@v2
        if: runner.os == 'Linux'

      - name: Install dependencies - Ubuntu
        run: sudo apt-get install -y ninja-build libnetcdff-dev gfortran
        if: runner.os == 'Linux'

      - name: Install dependencies - macOS
        run: brew install meson netcdf
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        if: runner.os == 'macOS'

      - name: Install Meson - Ubuntu
        run: python -m pip install meson==${{ env.MESON_VERSION }}
        if: runner.os == 'Linux'

      - name: Setup build directory - Ubuntu
        run: meson setup builddir
        if: runner.os == 'Linux'

      - name: Setup build directory - macOS
        run: meson setup builddir
        if: runner.os == 'macOS'
        env:
          CC: gcc-10
          FC: gfortran-10

      - name: Compile source code
        run: meson compile -C builddir
  # Since the Intel docker images are so large we run this as a separate job
  intel:
    name: Build BLOM using Intel compilers
    # Do not run this job unless normal build has succeeded, since the image is
    # so large, waiting for this job to fail is not necessary
    needs: build
    runs-on: ubuntu-latest
    container: intel/oneapi:os-tools-ubuntu18.04
    # Tell Meson to use Intel compilers
    env:
      CC: icc
      FC: ifort
    steps:
      - name: Install dependencies
        run: apt-get install -y ninja-build libnetcdff-dev intel-oneapi-runtime-fortran intel-oneapi-compiler-fortran

      - name: Setup Python for newer version of Meson
        uses: actions/setup-python@v2

      - name: Install Meson
        run: python3 -m pip install meson==${{ env.MESON_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: github_action

      - name: Setup build directory
        run: meson setup builddir

      - name: Compile source code
        run: meson compile -C builddir
