#! /bin/csh -f

if !(-d $CASEROOT/Buildnml_Prestage) mkdir $CASEROOT/Buildnml_Prestage
if !(-d $CASEROOT/Buildexe         ) mkdir $CASEROOT/Buildexe

#------------------------------------------------------------------------------
#  determine input data files and resolution dependent variables            
#------------------------------------------------------------------------------

if      ( $OCN_GRID ==  gx1v5) then
  setenv INPUTPATH \$DIN_LOC_ROOT/ocn/micom/$OCN_GRID/20090715
else
  echo "$0 ERROR: Cannot deal with GRID = $OCN_GRID "
  exit -1
endif

cat > $CASEROOT/Buildnml_Prestage/micom.input_data_list << EOF1
grid_file = $INPUTPATH/grid.nc
ncep_landmask_file = $INPUTPATH/land.sfc.gauss.nc
ncep_height_file = $INPUTPATH/hgt.sfc.nc
ice_clim_file = $INPUTPATH/icec_1968-1996.uf
sst_clim_file = $INPUTPATH/skt_1968-1996.uf
sss_clim_file = $INPUTPATH/sss_nodc.dat
tidal_dissipation_file = $INPUTPATH/tidal_dissipation.nc
EOF1
if ($RUN_TYPE == startup )  then
cat >> $CASEROOT/Buildnml_Prestage/micom.input_data_list << EOF1
inicon_file = $INPUTPATH/inicon.nc
EOF1
endif

#==============================================================================
# Create resolved prestage data script
#==============================================================================

#set IYEAR0   = `echo $RUN_STARTDATE | cut -c1-4  | sed -e 's/^0*//'`
#set IMONTH0  = `echo $RUN_STARTDATE | cut -c6-7  | sed -e 's/^0*//'`
#set IDAY0    = `echo $RUN_STARTDATE | cut -c9-10 | sed -e 's/^0*//'`
set YEAR0   = `echo $RUN_STARTDATE | cut -c1-4 `
set MONTH0  = `echo $RUN_STARTDATE | cut -c6-7 `
set DAY0    = `echo $RUN_STARTDATE | cut -c9-10`

if ($RUN_TYPE == startup || $RUN_TYPE == hybrid )  then
  if ($OCN_NCPL > 1) then 
    echo "$0 ERROR: Unsupported coupling interval OCN_NCPL = $OCN_NCPL "
    exit -1
  else
    @ DAY0 = $DAY0 + 1
    set DAY0=`echo 0$DAY0 | tail -3c`
  endif
endif

cat >! $CASEROOT/Buildnml_Prestage/micom.buildnml_prestage.csh << EOF
#! /bin/csh -f 
#==============================================================================
# CCSM micom: build namelist and prestage data
#==============================================================================

set exedir = \$EXEROOT/ccsm_se; cd \$exedir

#------------------------------------------------------------------------------
# Create resolved namelist
#------------------------------------------------------------------------------

cat >! ocn_in << EOF1
     0     : First day of integration (i6)
999999     : Last day of integration (i6)
$YEAR0.$MONTH0.$DAY0 : Model date (i4,x,i2,x,i2)
$YEAR0.$MONTH0.$DAY0 : Initial experiment date (i4,x,i2,x,i2)
xxxx       : Experiment name (runid)
 1920.00   : Baroclinic time step (sec) (f8.2)
   40.00   : Barotropic time step (sec) (f8.2)
 30        : 2D diag. (i3). Positive: days pr diag., Negative: diags. pr day
 30        : 3D diag. (i3). Positive: days pr diag., Negative: diags. pr day
    0.00   : e-folding time scale (days) for SST relax., if 0 no relax. (f8.2)
    0.00   : e-folding time scale (days) for SSS relax., if 0 no relax. (f8.2)
false      : Apply diagnosed heat flux flag (l5)
false      : Apply diagnosed freshwater flux flag (l5)
false      : Diagnose heat flux flag (l5)
false      : Diagnose freshwater flux flag (l5)
$INPUTPATH/ : Path to input files (path)
./         : Path to diagnostic files (path1)
./         : Path to restart files (path2)
./         : Path to synoptic NCEP fields (ncep_path)
EOF1

EOF

#==============================================================================
#  Create script to build executable
#==============================================================================

cat >! $CASEROOT/Buildexe/micom.buildexe.csh << EOF
#! /bin/csh -f 

set exedir = \$EXEROOT/ccsm_se
set objdir = \$OBJROOT/ocn/obj; cd \$objdir
set dimdir = \$objdir/dimensions

#------------------------------------------------------------------------------
# Make dimensions.F
#------------------------------------------------------------------------------

mkdir -p \$dimdir
set kdm = `cat \$CODEROOT/ocn/micom/bld/\$OCN_GRID/kdm`
\$CASEROOT/Tools/Templates/micom_dimensions -n \$NTASKS_OCN -k \$kdm -d \$CODEROOT/ocn/micom/bld/\$OCN_GRID
set recompile = FALSE
cmp -s dimensions.F \$dimdir/dimensions.F || set recompile = TRUE
if (\$recompile == 'TRUE') then
  mv dimensions.F \$dimdir
else
  rm dimensions.F
endif

#------------------------------------------------------------------------------
# Build the library
#------------------------------------------------------------------------------

\cat >! Filepath << EOF1
\$dimdir
\$CASEROOT/SourceMods/src.micom
\$CODEROOT/ocn/micom/drivers/ccsm_cpl7
\$CODEROOT/ocn/micom/phy
EOF1

if (\$BLDTYPE == 'TRUE' || \$recompile == 'TRUE') then
  cp \$BLDROOT/mkDepends . || exit 2
  cp \$BLDROOT/mkSrcfiles . || exit 2
  set SMP = FALSE ;  if (\$NTHRDS_OCN > 1) set SMP = TRUE
  gmake complib -j \$GMAKE_J MODEL=micom COMPLIB=\$LIBROOT/libocn.a SMP=\$SMP MACFILE=\$CASEROOT/Macros.\$MACH USER_CPPDEFS="-DCCSMCOUPLED -DMPI -DNCEP -UICEDYN -UTRC -UATRC -UTRCDIA -UNEST -UCOMPDIA -DCOMPRES" -f \$BLDROOT/Makefile || exit 2
  cp -p *comp_*.mod $LIBROOT/include/
endif

if !(-f \$LIBROOT/libocn.a) then
  echo "ERROR: micom library not available, check SETBLD"
  exit -1
endif

EOF

#==============================================================================
# end of script
#==============================================================================
